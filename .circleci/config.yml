version: 2.1

parameters:
  nightly-security-scan:
    type: boolean
    default: false

orbs:
  macos: circleci/macos@2

executors:
  macos_arm:
    macos:
      xcode: << parameters.xcode >>
    resource_class: m4pro.medium
    parameters:
      xcode:
        type: string

jobs:
  build-and-test-sdk:
    parameters:
      xcode:
        type: string
      ios:
        type: string
        default: "18.4"
      device:
        type: string
        default: "iPhone 16"
    executor:
      name: macos_arm
      xcode: << parameters.xcode >>
    steps:
      - checkout

      - macos/preboot-simulator:
          version: << parameters.ios >>
          platform: "iOS"
          device: << parameters.device >>

      - run:
          name: List installed runtimes & devices (debug)
          command: |
            xcrun simctl list runtimes
            xcrun simctl list devices

      - run:
          name: Install xcov
          command: gem install xcov

      - run:
          name: Run Unit Tests (iOS << parameters.ios >> on << parameters.device >>)
          command: |
              set -eo pipefail
              cd Tests/FrameworkTests/Resources
              plutil -insert tokenization_vaultId -string "${tokenization_vaultId}" MockedData.plist
              plutil -insert vaultID -string "${vaultID}" MockedData.plist
              cd ../../..
              xcodebuild \
                test \
                -project VGSCollectSDK.xcodeproj \
                -scheme FrameworkTests \
                -destination 'platform=iOS Simulator,name=<< parameters.device >>,OS=<< parameters.ios >>' \
                -enableCodeCoverage YES \
                -testPlan FrameworkTests \
                | tee xcodebuild.log \
                | xcpretty --report junit --output test-results/junit.xml
              status=${PIPESTATUS[0]}
              echo "xcodebuild exit status: $status"
              exit $status

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: xcodebuild.log
          destination: xcodebuild-<< parameters.xcode >>.log

      - run:
          name: Show Git Branch
          command: |
            echo "Branch: ${CIRCLE_BRANCH}"


  build-and-ui-test-demo-app:
    parameters:
      xcode:
        type: string
      ios:
        type: string
        default: "18.4"
      device:
        type: string
        default: "iPhone 16"
    executor:
      name: macos_arm
      xcode: << parameters.xcode >>
    steps:
      - checkout

      - macos/preboot-simulator:
          version: << parameters.ios >>
          platform: "iOS"
          device: << parameters.device >>

      - run:
          name: Run UI Tests (<< parameters.device >> iOS << parameters.ios >>)
          command: >
            cd demoapp/demoapp &&
            plutil -insert vaultID -string ${vaultID} UITestsMockedData.plist &&
            plutil -insert tokenization_vaultId -string ${tokenization_vaultId} UITestsMockedData.plist &&
            cd .. &&
            pod install &&
            xcodebuild
              test
              -workspace demoapp.xcworkspace
              -scheme demoappUITests
              -sdk iphonesimulator
              -destination 'platform=iOS Simulator,name=<< parameters.device >>,OS=<< parameters.ios >>'
              | tee xcodebuild.log
              | xcpretty --report junit --output test-results/junit.xml

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: xcodebuild.log
          destination: demoapp-ui-tests-xcode-<< parameters.xcode >>.log

  scan-sast-pr:
    parameters:
      default_branch:
        type: string
        default: master
    environment:
      SEMGREP_REPO_URL: << pipeline.project.git_url >>
      SEMGREP_BRANCH: << pipeline.git.branch >>
      SEMGREP_BASELINE_REF: << parameters.default_branch >>
    docker:
      - image: returntocorp/semgrep
    steps:
      - checkout
      - run:
          name: Semgrep diff scan
          command: semgrep ci

  scan-sast-full:
    parameters:
      default_branch:
        type: string
        default: master
    environment:
      SEMGREP_REPO_URL: << pipeline.project.git_url >>
      SEMGREP_BRANCH: << pipeline.git.branch >>
    docker:
      - image: returntocorp/semgrep
    steps:
      - checkout
      - run:
          name: Semgrep full scan
          command: semgrep ci

workflows:
  build-and-test:
    when:
      not: << pipeline.parameters.nightly-security-scan >>
    jobs:
      - build-and-test-sdk:
          name: build-and-test-sdk-xcode-16.3.0
          xcode: "16.3.0"
          context:
            - frontend-deploy
            - circleci

      - scan-sast-pr:
          context:
            - security-tools

      - scan-sast-full:
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /production-.*/
          context:
            - security-tools

  scheduled-security-scan:
    when: << pipeline.parameters.nightly-security-scan >>
    jobs:
      - scan-sast-full:
          context:
            - security-tools
