version: 2.1

# === Scheduled Pipeline Parameters ===
parameters:
  nightly-security-scan:
    type: boolean
    default: false

jobs:
  build-and-test-sdk:
    macos:
      xcode: "14.2"
    steps:
      - checkout
      - run:
          name: Install xcov
          command: >
            gem install xcov
      - run:
          name: Run Tests iOS 16
          command: >
            cd Tests/FrameworkTests/Resources && plutil -insert tokenization_vaultId -string ${tokenization_vaultId} MockedData.plist && plutil -insert vaultID -string ${vaultID} MockedData.plist && cd .. && cd .. && cd .. && xcodebuild test -project VGSCollectSDK.xcodeproj -scheme FrameworkTests -destination 'platform=iOS Simulator,name=iPhone 14,OS=16.2' -enableCodeCoverage YES -testPlan FrameworkTests
      - run:
          name: Calculate Test Coverage
          command: >
            xcov -p VGSCollectSDK.xcodeproj -s VGSCollectSDK --json_report
      - run:
          name: Show Git Branch
          command: |
            echo "Branch: << pipeline.git.branch >>"
      - run:
          name: Push Test Coverage to Compass
          command: >
            if [ "<< pipeline.git.branch >>" == "master" ]; then
              ./ops/publish-test-coverage.sh 
            else
              echo "Code coverage will only be pushed to compass on the main branch."
            fi
            

  build-and-ui-test-demo-app-ios-16-iphone14:
    macos:
      xcode: "14.2"
    steps:
      - checkout
      - run:
          name: Run UI Tests on iPhone 14 iOS 16.2
          command: >
            cd demoapp &&
            cd demoapp &&
            plutil -insert vaultID -string ${vaultID} UITestsMockedData.plist &&
            cd .. &&
            pod install &&
            xcrun instruments -w "iPhone 14 (16.2) [" || true &&
            xcodebuild test -workspace demoapp.xcworkspace
            -scheme demoappUITests
            -sdk iphonesimulator
            -destination 'platform=iOS Simulator,name=iPhone 14,OS=16.2'

  scan-sast-pr:
    parameters:
      default_branch:
        type: string
        default: master
    environment:
      SEMGREP_REPO_URL: << pipeline.project.git_url >>
      SEMGREP_BRANCH: << pipeline.git.branch >>
      SEMGREP_BASELINE_REF: << parameters.default_branch >>
    docker:
      - image: returntocorp/semgrep
    steps:
      - checkout
      - run:
          name: "Semgrep diff scan"
          command: semgrep ci

  scan-sast-full:
    parameters:
      default_branch:
        type: string
        default: master
    environment:
      SEMGREP_REPO_URL: << pipeline.project.git_url >>
      SEMGREP_BRANCH: << pipeline.git.branch >>
    docker:
      - image: returntocorp/semgrep
    steps:
      - checkout
      - run:
          name: "Semgrep full scan"
          command: semgrep ci

workflows:
  build-and-test:
    when:
      not: << pipeline.parameters.nightly-security-scan >>
    jobs:
      - build-and-test-sdk
      - build-and-ui-test-demo-app-ios-16-iphone14
      - scan-sast-pr:
          context:
            - security-tools

      - scan-sast-full:
          filters:
            # ignore any commit on any branch by default
            branches:
              ignore: /.*/
            tags:
              only:
                - /production-.*/
          context:
            - security-tools

  scheduled-security-scan:
    when: << pipeline.parameters.nightly-security-scan >>
    jobs:
      - scan-sast-full:
          context:
            - security-tools